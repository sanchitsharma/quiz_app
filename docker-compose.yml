version: '3'

services:
  quiz-prod:
    stdin_open: true
    tty: true
    restart: always
    image: docker.io/sanchitsharma98/quiz_app:latest
    container_name: quiz-prod
    env_file: Docker/env/.env
    working_dir: /root/src/quiz_app
    entrypoint:
        - /usr/bin/python3
        - -c
        - |
            import os
            import sys
            import bjoern
            from django.core.wsgi import get_wsgi_application
            application = get_wsgi_application()
            bjoern.run(application,'0.0.0.0',8101)

    ports:
        - "127.0.0.1:8101:80"
    networks:
        quiz_app:
            ipv4_address: 172.40.0.3
    volumes:
        - .:/root/src/quiz_app
    depends_on:
        - "postgres-quiz"

  quiz-nginx:
    stdin_open: true
    tty: true
    restart: always
    image: docker.io/library/nginx:1.15.3
    container_name: quiz-nginx
    env_file: Docker/env/.env
    ports:
        - "80:80"
    networks:
        quiz_app:
            ipv4_address: 172.40.0.4
    volumes:
      - ./Docker/confs/sites-enabled:/etc/nginx/sites-enabled
    depends_on:
        - "quiz-prod"

  postgres-quiz:
    stdin_open: true
    tty: true
    restart: always
    image: postgres:10.5
    container_name: postgres-quiz
    env_file: Docker/env/.env
    ports:
        - "5435:5432"
    volumes:
        - postgres-quiz-volume:/var/lib/postgresql/data
    networks:
        quiz_app:
            ipv4_address: 172.40.0.2
#    healthcheck:
#      test: "pg_isready -h localhost -p 5432 -q -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
#      interval: 10s
#      timeout: 10s
#      retries: 5


networks:
    quiz_app:
        external:
            name: quiz_app

volumes:
    postgres-quiz-volume:
        external: true